Доделать задания из списка:

Задание 1: Создание базового и производного классов
1. Описание: Создайте базовый класс Animal, который будет иметь следующие свойства:
   o name (строка)
   o age (целое число)
   Реализуйте метод speak(), который выводит на экран сообщение о том, что животное говорит.
2. Производный класс: Создайте производный класс Dog, который наследует от Animal и добавляет новое свойство:
   o breed (строка)
   o Переопределите метод speak(), чтобы он выводил сообщение, специфичное для собак.

Задание 2: Использование модификаторов доступа
1. Описание: Измените класс Animal, чтобы использовать модификатор доступа protected для свойства age и private для свойства name. Добавьте методы доступа (геттеры) для этих свойств.

Задание 3: Представление объектов в памяти
1. Описание: Создайте программу, которая создает объекты классов Animal и Dog, и выводит адреса этих объектов в памяти. Используйте оператор sizeof для определения размера объектов.

Задание 4: Модификаторы наследования (1)
Цель: Изучить различные модификаторы наследования (public, protected, private).
Описание: Создайте базовый класс Shape с:
- Свойством color (цвет, protected)
- Методом displayColor(), который выводит цвет
Создайте производный класс Circle, который наследуется от Shape с:
- Конструктором, который инициализирует цвет
- Публичным методом setColor(), который позволяет изменять цвет
В функции main создайте объект класса Circle, установите цвет и выведите его.
Ожидаемый результат: Программа должна корректно изменять и отображать цвет круга.

Задание 5: Множественное наследование (2)
Цель: Понять основы множественного наследования.
Описание: Создайте базовый класс Vehicle с:
- Свойством speed (скорость, private)
- Методом displaySpeed(), который выводит скорость
Создайте второй базовый класс Engine с:
- Свойством power (мощность, private)
- Методом displayPower(), который выводит мощность
Создайте производный класс Car, который наследуется от Vehicle и Engine с:
- Конструктором, который инициализирует скорость и мощность
В функции main создайте объект класса Car, инициализируйте его свойства и вызовите методы для отображения скорости и мощности.
Ожидаемый результат: Программа должна выводить скорость и мощность автомобиля.

Задание 6: Представление объектов в памяти (1)
Цель: Понять, как объекты представлены в памяти и как это влияет на размер объекта.
Описание: Создайте класс Person, который содержит:
- name (строка, private)
- age (целое число, private)
Создайте производный класс Student, который добавляет:
- studentID (целое число, private)
В функции main:
- Создайте объекты Person и Student
- Используйте оператор sizeof для вывода размера каждого объекта в памяти
Ожидаемый результат: Программа должна выводить размеры классов Person и Student, показывая, как наследование влияет на размер объекта.

Задание 7: Полиморфизм с использованием виртуальных функций (2)
Цель: Понять, как виртуальные функции работают при наследовании.
Описание: Создайте базовый класс Shape с:
- Виртуальным методом area(), который возвращает площадь фигуры
Создайте два производных класса: Rectangle и Triangle, которые переопределяют метод area():
- Rectangle должен принимать width и height и возвращать площадь как width * height
- Triangle должен принимать base и height и возвращать площадь как 0.5 * base * height
В функции main создайте массив указателей на Shape и добавьте в него объекты Rectangle и Triangle.
Пройдитесь по массиву и вызовите метод area() для каждого объекта.
Ожидаемый результат: Программа должна корректно вычислять и выводить площади различных фигур.

Задание 8: Приватные и защищенные члены (1)
Цель: Изучить разницу между приватными и защищенными членами.
Описание: Создайте базовый класс Account с:
- Приватным свойством balance (баланс)
- Методом deposit() для добавления средств
Создайте производный класс SavingsAccount, который добавляет:
- Защищенное свойство interestRate (процентная ставка)
- Метод для вычисления процентов на основе текущего баланса
В функции main создайте объекты Account и SavingsAccount, внесите средства и выведите баланс.
Ожидаемый результат: Программа должна успешно обрабатывать операции с учётом доступа к членам класса.

Задание 9: Модификаторы наследования (protected и private) (1)
Цель: Углубить понимание модификаторов наследования.
Описание: Создайте базовый класс Employee с:
- Свойством name (защищенное)
- Методом getName()
Создайте производный класс Manager, который добавляет:
- Приватное свойство department
- Метод setDepartment() и getDepartment()
В функции main создайте объект Manager, установите имя и департамент, затем выведите их.
Ожидаемый результат: Программа должна корректно работать с защищенными и приватными свойствами.

Задание 10: Композиция и наследование (2)
Цель: Понять, как композиция и наследование могут работать вместе.
Описание: Создайте класс Address с:
- Свойствами street, city, zipCode
Создайте базовый класс Person с:
- Свойством name
- Композицией класса Address (т.е. объект Address как член класса Person)
Создайте производный класс Employee, который добавляет:
- Свойство employeeID
В функции main создайте объект Employee, инициализируйте его имя, ID и адрес. Выведите все данные.
Ожидаемый результат: Программа должна корректно выводить информацию о работнике и его адресе.